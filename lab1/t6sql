CREATE OR REPLACE FUNCTION CalculateYearlyReward(
    p_monthly_salary IN NUMBER,
    p_annual_bonus_rate IN NUMBER
)
RETURN NUMBER
IS
    v_yearly_reward NUMBER;
    v_bonus_rate NUMBER;
BEGIN
    IF p_monthly_salary <= 0 OR p_annual_bonus_rate < 0 THEN
        RAISE_APPLICATION_ERROR(-20001, 'Некорректные входные данные');
    END IF;
    v_bonus_rate := p_annual_bonus_rate / 100;
    v_yearly_reward := (1 + v_bonus_rate) * 12 * p_monthly_salary;

    RETURN v_yearly_reward;
EXCEPTION
    WHEN OTHERS THEN
        RAISE_APPLICATION_ERROR(-20002, 'Ошибка при вычислении общего вознаграждения: ' || SQLERRM);
END CalculateYearlyReward;
/


DECLARE
    v_monthly_salary NUMBER := 5000;
    v_annual_bonus_rate NUMBER := 10;
    v_yearly_reward NUMBER;
BEGIN
    v_yearly_reward := CalculateYearlyReward(v_monthly_salary, v_annual_bonus_rate);
    DBMS_OUTPUT.PUT_LINE('Общее вознаграждение за год: ' || v_yearly_reward);
END;
/

DECLARE
    v_monthly_salary NUMBER := -5000;
    v_annual_bonus_rate NUMBER := -10;
    v_yearly_reward NUMBER;
BEGIN
    v_yearly_reward := CalculateYearlyReward(v_monthly_salary, v_annual_bonus_rate);
    DBMS_OUTPUT.PUT_LINE('Общее вознаграждение за год: ' || v_yearly_reward);
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Произошла ошибка: ' || SQLERRM);
END;
/

